# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

# name: Node.js CI

# on:
#   push:
#     branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [18.x, 20.x, 22.x]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

#     steps:
#     - uses: actions/checkout@v4
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v4
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
#     - run: npm ci
#     - run: npm run build --if-present
#     - run: npm test


name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'  # 选择你期望的Node.js版本，这里以16为例
    - name: Install dependencies
      run: npm install  # 使用npm安装项目依赖，若使用yarn，可改为yarn install
    - name: Build the project
      run: npm run build  # 假设项目中有定义build脚本用于构建项目，比如对于一些前端项目会进行代码压缩、打包等操作，根据实际项目的构建脚本调整
    - name: Create artifact directory
      run: mkdir -p artifacts
    - name: Copy build files
      run: cp -r build/* artifacts/  # 假设构建后的文件在build目录下，根据实际情况调整，这里将构建后的文件复制到artifacts目录
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: nodejs-project-artifacts
        path: artifacts
